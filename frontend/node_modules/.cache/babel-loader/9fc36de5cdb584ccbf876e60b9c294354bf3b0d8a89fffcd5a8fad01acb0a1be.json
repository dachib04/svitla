{"ast":null,"code":"var _jsxFileName = \"/Users/dachiberidze/Desktop/svitla/frontend/src/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport api from \"./api/api\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport \"./styles/App.css\";\nimport Topbar from \"./components/Topbar\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport FolderMenu from \"./components/FolderMenu\";\nimport FileMenu from \"./components/FileMenu\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileManager({\n  onLogout\n}) {\n  _s();\n  var _currentFolder$subfol3, _currentFolder$files2, _currentFolder$files3;\n  const [rootFolders, setRootFolders] = useState([]);\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [newRootName, setNewRootName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const [viewMode, setViewMode] = useState(\"list\");\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const buildPath = (folder, allFolders) => {\n    if (!folder) return \"\";\n    const parent = allFolders.find(f => f.id === folder.parent_id);\n    if (parent) {\n      return buildPath(parent, allFolders) + \" / \" + folder.name;\n    }\n    return folder.name;\n  };\n\n  // Fetch folder\n  const [breadcrumbPath, setBreadcrumbPath] = useState([]);\n  const [folderMap, setFolderMap] = useState({});\n  const fetchFolder = async (id, resetPath = false) => {\n    try {\n      setLoading(true);\n      const res = await api.get(`/folders/${id}`);\n      const folder = res.data;\n      setCurrentFolder(folder);\n      setFolderMap(prev => ({\n        ...prev,\n        [folder.id]: folder\n      }));\n      const path = [];\n      let current = folder;\n      while (current) {\n        path.unshift(current);\n        current = current.parent_id ? folderMap[current.parent_id] || null : null;\n      }\n      setBreadcrumbPath(path);\n      setSearchResults([]);\n    } catch (error) {\n      console.error(\"Error fetching folder:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch root folders\n  const fetchRootFolders = async () => {\n    try {\n      const res = await api.get(\"/folders?parent_id=null\");\n      setRootFolders(res.data);\n    } catch (error) {\n      console.error(\"Error fetching root folders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchRootFolders();\n  }, []);\n\n  // Create subfolder\n  const createSubFolder = async () => {\n    if (!newFolderName || !currentFolder) return;\n    try {\n      const res = await api.post(\"/folders\", {\n        name: newFolderName,\n        parent_id: currentFolder.id\n      });\n      setCurrentFolder({\n        ...currentFolder,\n        subfolders: [...(currentFolder.subfolders || []), res.data]\n      });\n      setNewFolderName(\"\");\n    } catch (error) {\n      console.error(\"Error creating subfolder:\", error);\n    }\n  };\n\n  // Create root folder\n  const createRootFolder = async () => {\n    if (!newRootName) return;\n    try {\n      await api.post(\"/folders\", {\n        name: newRootName,\n        parent_id: null\n      });\n      await fetchRootFolders();\n      setNewRootName(\"\");\n    } catch (error) {\n      console.error(\"Error creating root folder:\", error);\n    }\n  };\n\n  // Upload file\n  const uploadFile = async () => {\n    if (!file || !currentFolder) return;\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"folder_id\", currentFolder.id.toString());\n      const res = await api.post(\"/files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setCurrentFolder({\n        ...currentFolder,\n        files: [...(currentFolder.files || []), res.data]\n      });\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n    } catch (error) {\n      console.error(\"File upload error:\", error);\n    }\n  };\n\n  // Delete file\n  const deleteFile = async id => {\n    if (!currentFolder) return;\n    try {\n      var _currentFolder$files;\n      await api.delete(`/files/${id}`);\n      setCurrentFolder({\n        ...currentFolder,\n        files: ((_currentFolder$files = currentFolder.files) === null || _currentFolder$files === void 0 ? void 0 : _currentFolder$files.filter(f => f.id !== id)) || []\n      });\n    } catch (error) {\n      console.error(\"Error deleting file:\", error);\n    }\n  };\n\n  // Rename folder\n  const renameFolder = async (id, newName, isRoot = false) => {\n    try {\n      const res = await api.put(`/folders/${id}`, {\n        name: newName\n      });\n      const updatedName = res.data.name;\n      if (isRoot) {\n        setRootFolders(prev => prev.map(f => f.id === id ? {\n          ...f,\n          name: updatedName\n        } : f));\n      } else if (currentFolder) {\n        var _currentFolder$subfol;\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: (_currentFolder$subfol = currentFolder.subfolders) === null || _currentFolder$subfol === void 0 ? void 0 : _currentFolder$subfol.map(sub => sub.id === id ? {\n            ...sub,\n            name: updatedName\n          } : sub)\n        });\n      }\n    } catch (err) {\n      console.error(\"Rename folder error:\", err);\n    }\n  };\n\n  // Delete folder\n  const deleteFolder = async (id, isRoot = false) => {\n    if (!window.confirm(\"Are you sure you want to delete this folder and all its contents?\")) return;\n    try {\n      await api.delete(`/folders/${id}`);\n      if (isRoot) {\n        setRootFolders(rootFolders.filter(f => f.id !== id));\n        if ((currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id) === id) setCurrentFolder(null);\n      } else if (currentFolder) {\n        var _currentFolder$subfol2;\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: (_currentFolder$subfol2 = currentFolder.subfolders) === null || _currentFolder$subfol2 === void 0 ? void 0 : _currentFolder$subfol2.filter(sub => sub.id !== id)\n        });\n      }\n    } catch (error) {\n      console.error(\"Error deleting folder:\", error);\n    }\n  };\n\n  // Search files\n  const searchFiles = async () => {\n    if (!searchTerm.trim()) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const res = await api.get(`/search?q=${encodeURIComponent(searchTerm)}`);\n      setSearchResults(res.data);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      onSearch: searchFiles,\n      onLogout: onLogout,\n      searchResults: searchResults,\n      fetchFolder: fetchFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-root\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New root folder\",\n            value: newRootName,\n            onChange: e => setNewRootName(e.target.value),\n            className: \"text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createRootFolder,\n            className: \"primary-btn\",\n            children: \"+ Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            style: {\n              fontSize: 20,\n              color: \"#6b7280\",\n              marginRight: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Folders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), rootFolders.map(f => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => fetchFolder(f.id),\n          className: `folder-entry ${(currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id) === f.id ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(FolderIcon, {\n              style: {\n                fontSize: 18,\n                color: \"#fbbf24\",\n                marginRight: \"6px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), f.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FolderMenu, {\n            folder: f,\n            isRoot: true,\n            renameFolder: renameFolder,\n            deleteFolder: deleteFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, f.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"italic\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this) : currentFolder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1 text-gray-600 text-sm mb-4\",\n            children: breadcrumbPath.map((f, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `cursor-pointer px-1 rounded \n                        ${idx === breadcrumbPath.length - 1 ? \"font-semibold text-gray-900\" : \"hover:bg-gray-100 hover:text-blue-600\"}`,\n                onClick: () => fetchFolder(f.id, true),\n                children: f.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), idx < breadcrumbPath.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-400\",\n                children: \"\\u203A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this)]\n            }, f.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                style: {\n                  fontSize: 20,\n                  color: \"#6b7280\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"font-semibold\",\n                children: \"Subfolders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"New subfolder name\",\n                value: newFolderName,\n                onChange: e => setNewFolderName(e.target.value),\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: createSubFolder,\n                className: \"primary-btn\",\n                children: \"+ Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), (_currentFolder$subfol3 = currentFolder.subfolders) !== null && _currentFolder$subfol3 !== void 0 && _currentFolder$subfol3.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-row file-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col created\",\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), currentFolder.subfolders.map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col name subfolder-name\",\n                  onClick: () => fetchFolder(sub.id),\n                  children: [/*#__PURE__*/_jsxDEV(FolderIcon, {\n                    style: {\n                      fontSize: 20,\n                      color: \"#fbbf24\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 27\n                  }, this), sub.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col created\",\n                  children: new Date(sub.created_at || Date.now()).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col actions\",\n                  children: /*#__PURE__*/_jsxDEV(FolderMenu, {\n                    folder: sub,\n                    renameFolder: renameFolder,\n                    deleteFolder: deleteFolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 25\n                }, this)]\n              }, sub.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 italic\",\n              children: \"No subfolders yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                style: {\n                  fontSize: 20,\n                  color: \"#6b7280\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"font-semibold\",\n                children: \"Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: e => {\n                  var _e$target$files;\n                  return setFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n                },\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: uploadFile,\n                className: \"primary-btn\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), (_currentFolder$files2 = currentFolder.files) !== null && _currentFolder$files2 !== void 0 && _currentFolder$files2.length ? viewMode === \"list\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-row file-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col created\",\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), currentFolder.files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col name cursor-pointer hover:underline flex items-center gap-2\",\n                  onClick: () => window.open(`${api.defaults.baseURL}/files/${file.id}/preview`, \"_blank\"),\n                  children: [file.name.endsWith(\".pdf\") ? /*#__PURE__*/_jsxDEV(PictureAsPdfIcon, {\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 27\n                  }, this) : file.name.endsWith(\".docx\") || file.name.endsWith(\".doc\") ? /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n                    style: {\n                      color: \"blue\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 27\n                  }, this) : file.name.match(/\\.(jpg|jpeg|png|gif)$/i) ? /*#__PURE__*/_jsxDEV(ImageIcon, {\n                    style: {\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {\n                    style: {\n                      color: \"gray\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this), file.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col created\",\n                  children: new Date(file.created_at || Date.now()).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-col actions\",\n                  children: /*#__PURE__*/_jsxDEV(FileMenu, {\n                    file: file,\n                    deleteFile: deleteFile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this)]\n              }, file.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-3 gap-4\",\n              children: (_currentFolder$files3 = currentFolder.files) === null || _currentFolder$files3 === void 0 ? void 0 : _currentFolder$files3.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-thumbnail\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(FileMenu, {\n                  file: file,\n                  deleteFile: deleteFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 25\n                }, this)]\n              }, file.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 italic\",\n              children: \"No files uploaded yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a folder from the sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n\n// App wrapper\n_s(FileManager, \"qkBK+blj7SOiOIFwF1aLQEu8fP8=\");\n_c = FileManager;\nexport default function App() {\n  _s2();\n  const [authState, setAuthState] = useState(\"login\");\n  if (authState === \"login\") {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: () => setAuthState(\"app\"),\n      switchToRegister: () => setAuthState(\"register\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  }\n  if (authState === \"register\") {\n    return /*#__PURE__*/_jsxDEV(Register, {\n      switchToLogin: () => setAuthState(\"login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(FileManager, {\n    onLogout: () => {\n      localStorage.removeItem(\"token\");\n      setAuthState(\"login\");\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"OdlsmsLVsPzrYzjpL9v7DLAjzU8=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileManager\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","api","Login","Register","Topbar","FolderIcon","FolderMenu","FileMenu","InsertDriveFileIcon","PictureAsPdfIcon","DescriptionIcon","ImageIcon","ChevronRightIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","FileManager","onLogout","_s","_currentFolder$subfol3","_currentFolder$files2","_currentFolder$files3","rootFolders","setRootFolders","currentFolder","setCurrentFolder","newFolderName","setNewFolderName","file","setFile","newRootName","setNewRootName","loading","setLoading","fileInputRef","viewMode","setViewMode","searchTerm","setSearchTerm","searchResults","setSearchResults","buildPath","folder","allFolders","parent","find","f","id","parent_id","name","breadcrumbPath","setBreadcrumbPath","folderMap","setFolderMap","fetchFolder","resetPath","res","get","data","prev","path","current","unshift","error","console","fetchRootFolders","createSubFolder","post","subfolders","createRootFolder","uploadFile","formData","FormData","append","toString","headers","files","value","deleteFile","_currentFolder$files","delete","filter","renameFolder","newName","isRoot","put","updatedName","map","_currentFolder$subfol","sub","err","deleteFolder","window","confirm","_currentFolder$subfol2","searchFiles","trim","encodeURIComponent","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","style","fontSize","color","marginRight","idx","length","Date","created_at","now","toLocaleDateString","ref","_e$target$files","open","defaults","baseURL","endsWith","match","_c","App","_s2","authState","setAuthState","onLogin","switchToRegister","switchToLogin","localStorage","removeItem","_c2","$RefreshReg$"],"sources":["/Users/dachiberidze/Desktop/svitla/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport api from \"./api/api\";\nimport { Folder, File as DbFile } from \"./types/types\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport \"./styles/App.css\";\nimport Topbar from \"./components/Topbar\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport FolderMenu from \"./components/FolderMenu\";\nimport FileMenu from \"./components/FileMenu\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";  \nimport ImageIcon from \"@mui/icons-material/Image\";     \nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\n\n\nfunction FileManager({ onLogout }: { onLogout: () => void }) {\n  const [rootFolders, setRootFolders] = useState<Folder[]>([]);\n  const [currentFolder, setCurrentFolder] = useState<Folder | null>(null);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [file, setFile] = useState<File | null>(null);\n  const [newRootName, setNewRootName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\"list\");\n\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<DbFile[]>([]);\n\n  const buildPath = (folder: Folder | null, allFolders: Folder[]): string => {\n    if (!folder) return \"\";\n    const parent = allFolders.find(f => f.id === folder.parent_id);\n    if (parent) {\n      return buildPath(parent, allFolders) + \" / \" + folder.name;\n    }\n    return folder.name; \n  };\n\n\n  // Fetch folder\nconst [breadcrumbPath, setBreadcrumbPath] = useState<Folder[]>([]);\nconst [folderMap, setFolderMap] = useState<Record<number, Folder>>({});\n\n\n\nconst fetchFolder = async (id: number, resetPath = false) => {\n  try {\n    setLoading(true);\n    const res = await api.get(`/folders/${id}`);\n    const folder: Folder = res.data;\n\n    setCurrentFolder(folder);\n    \n    setFolderMap((prev) => ({ ...prev, [folder.id]: folder }));\n\n    const path: Folder[] = [];\n    let current: Folder | null = folder;\n\n    while (current) {\n      path.unshift(current);\n      current = current.parent_id ? folderMap[current.parent_id] || null : null;\n    }\n\n    setBreadcrumbPath(path);\n    setSearchResults([]);\n  } catch (error) {\n    console.error(\"Error fetching folder:\", error);\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n  // Fetch root folders\n  const fetchRootFolders = async () => {\n    try {\n      const res = await api.get(\"/folders?parent_id=null\");\n      setRootFolders(res.data);\n    } catch (error) {\n      console.error(\"Error fetching root folders:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchRootFolders();\n  }, []);\n\n  // Create subfolder\n  const createSubFolder = async () => {\n    if (!newFolderName || !currentFolder) return;\n    try {\n      const res = await api.post(\"/folders\", {\n        name: newFolderName,\n        parent_id: currentFolder.id,\n      });\n      setCurrentFolder({\n        ...currentFolder,\n        subfolders: [...(currentFolder.subfolders || []), res.data],\n      });\n      setNewFolderName(\"\");\n    } catch (error) {\n      console.error(\"Error creating subfolder:\", error);\n    }\n  };\n\n  // Create root folder\n  const createRootFolder = async () => {\n    if (!newRootName) return;\n    try {\n      await api.post(\"/folders\", { name: newRootName, parent_id: null });\n      await fetchRootFolders();\n      setNewRootName(\"\");\n    } catch (error) {\n      console.error(\"Error creating root folder:\", error);\n    }\n  };\n\n  // Upload file\n  const uploadFile = async () => {\n    if (!file || !currentFolder) return;\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"folder_id\", currentFolder.id.toString());\n      const res = await api.post(\"/files\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      setCurrentFolder({\n        ...currentFolder,\n        files: [...(currentFolder.files || []), res.data],\n      });\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n    } catch (error) {\n      console.error(\"File upload error:\", error);\n    }\n  };\n\n  // Delete file\n  const deleteFile = async (id: number) => {\n    if (!currentFolder) return;\n    try {\n      await api.delete(`/files/${id}`);\n      setCurrentFolder({\n        ...currentFolder,\n        files: currentFolder.files?.filter((f) => f.id !== id) || [],\n      });\n    } catch (error) {\n      console.error(\"Error deleting file:\", error);\n    }\n  };\n\n  // Rename folder\n  const renameFolder = async (\n    id: number,\n    newName: string,\n    isRoot: boolean = false\n  ) => {\n    try {\n      const res = await api.put(`/folders/${id}`, { name: newName });\n      const updatedName = res.data.name;\n\n      if (isRoot) {\n        setRootFolders((prev) =>\n          prev.map((f) => (f.id === id ? { ...f, name: updatedName } : f))\n        );\n      } else if (currentFolder) {\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: currentFolder.subfolders?.map((sub) =>\n            sub.id === id ? { ...sub, name: updatedName } : sub\n          ),\n        });\n      }\n    } catch (err) {\n      console.error(\"Rename folder error:\", err);\n    }\n  };\n\n  // Delete folder\n  const deleteFolder = async (id: number, isRoot: boolean = false) => {\n    if (\n      !window.confirm(\n        \"Are you sure you want to delete this folder and all its contents?\"\n      )\n    )\n      return;\n    try {\n      await api.delete(`/folders/${id}`);\n      if (isRoot) {\n        setRootFolders(rootFolders.filter((f) => f.id !== id));\n        if (currentFolder?.id === id) setCurrentFolder(null);\n      } else if (currentFolder) {\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: currentFolder.subfolders?.filter(\n            (sub) => sub.id !== id\n          ),\n        });\n      }\n    } catch (error) {\n      console.error(\"Error deleting folder:\", error);\n    }\n  };\n\n  // Search files\n  const searchFiles = async () => {\n    if (!searchTerm.trim()) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const res = await api.get(`/search?q=${encodeURIComponent(searchTerm)}`);\n      setSearchResults(res.data);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    }\n  };\n\n\n\n  return (\n    <div className=\"app-container\">\n      {/* Topbar */}\n      <Topbar\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        onSearch={searchFiles}\n        onLogout={onLogout}\n        searchResults={searchResults}  \n        fetchFolder={fetchFolder}\n      />\n\n      {/* Content area (sidebar + main) */}\n      <div className=\"content\">\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n\n            <div className=\"add-root\">\n            <input\n              type=\"text\"\n              placeholder=\"New root folder\"\n              value={newRootName}\n              onChange={(e) => setNewRootName(e.target.value)}\n              className=\"text-input\"\n            />\n            <button onClick={createRootFolder} className=\"primary-btn\">\n              + Add\n            </button>\n          </div>\n\n          <div className=\"sidebar-header\">\n            <ChevronRightIcon style={{ fontSize: 20, color: \"#6b7280\", marginRight: \"8px\" }} />\n\n            <h2>Folders</h2>\n          </div>\n\n          {rootFolders.map((f) => (\n            <div\n              key={f.id}\n              onClick={() => fetchFolder(f.id)}\n              className={`folder-entry ${\n                currentFolder?.id === f.id ? \"active\" : \"\"\n              }`}\n            >\n              <span>\n                <FolderIcon style={{ fontSize: 18, color: \"#fbbf24\", marginRight: \"6px\" }} />\n                {f.name}\n              </span>\n              <FolderMenu\n                folder={f}\n                isRoot={true}\n                renameFolder={renameFolder}\n                deleteFolder={deleteFolder}\n              />\n            </div>\n          ))}\n        </div>\n\n        {/* Main Area */}\n        <div className=\"main\">\n          {loading ? (\n            <p className=\"italic\">Loading...</p>\n          ) : currentFolder ? (\n            <>\n              <div className=\"flex items-center gap-1 text-gray-600 text-sm mb-4\">\n                {breadcrumbPath.map((f, idx) => (\n                  <React.Fragment key={f.id}>\n                    <span\n                      className={`cursor-pointer px-1 rounded \n                        ${idx === breadcrumbPath.length - 1 \n                          ? \"font-semibold text-gray-900\" \n                          : \"hover:bg-gray-100 hover:text-blue-600\"}`} \n                      onClick={() => fetchFolder(f.id, true)}\n                    >\n                      {f.name}\n                    </span>\n                    {idx < breadcrumbPath.length - 1 && (\n                      <span className=\"text-gray-400\">›</span> \n                    )}\n                  </React.Fragment>\n                ))}\n              </div>\n\n\n\n\n             {/* Subfolders */}\n              <div className=\"mt-6\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <ChevronRightIcon\n                    style={{ fontSize: 20, color: \"#6b7280\" }}\n                  />\n                  <h2 className=\"font-semibold\">Subfolders</h2>\n                </div>\n\n                {/* Add subfolder input */}\n                <div className=\"flex items-center gap-2 mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New subfolder name\"\n                    value={newFolderName}\n                    onChange={(e) => setNewFolderName(e.target.value)}\n                    className=\"text-input\"\n                  />\n                  <button onClick={createSubFolder} className=\"primary-btn\">\n                    + Add\n                  </button>\n                </div>\n\n                {currentFolder.subfolders?.length ? (\n                  <div className=\"file-table\">\n                    {/* Table Header */}\n                    <div className=\"file-row file-header\">\n                      <span className=\"file-col name\">Name</span>\n                      <span className=\"file-col created\">Created</span>\n                      <span className=\"file-col actions\"></span>\n                    </div>\n\n                    {/* Table Rows */}\n                    {currentFolder.subfolders.map((sub) => (\n                      <div key={sub.id} className=\"file-row\">\n                        <span\n                          className=\"file-col name subfolder-name\"\n                          onClick={() => fetchFolder(sub.id)}\n                        >\n                          <FolderIcon style={{ fontSize: 20, color: \"#fbbf24\" }} />\n                          {sub.name}\n                        </span>\n\n                        <span className=\"file-col created\">\n                          {new Date(sub.created_at || Date.now()).toLocaleDateString()}\n                        </span>\n\n                        <span className=\"file-col actions\">\n                          <FolderMenu\n                            folder={sub}\n                            renameFolder={renameFolder}\n                            deleteFolder={deleteFolder}\n                          />\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 italic\">No subfolders yet</p>\n                )}\n              </div>\n\n              {/* Files */}\n              <div className=\"mt-6\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <ChevronRightIcon\n                    style={{ fontSize: 20, color: \"#6b7280\" }}\n                  />\n                  <h2 className=\"font-semibold\">Files</h2>\n                </div>\n                <div className=\"flex items-center gap-2 mb-4\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={(e) =>\n                      setFile(e.target.files?.[0] || null)\n                    }\n                    className=\"text-input\"\n                  />\n                  <button onClick={uploadFile} className=\"primary-btn\">\n                    Upload\n                  </button>\n                </div>\n\n              {currentFolder.files?.length ? (\n                viewMode === \"list\" ? (\n                <div className=\"file-table\">\n                  {/* Header */}\n                  <div className=\"file-row file-header\">\n                    <span className=\"file-col name\">Name</span>\n                    <span className=\"file-col created\">Created</span>\n                    <span className=\"file-col actions\"></span>\n                  </div>\n\n                   {/* Files */}\n                  {currentFolder.files.map((file) => (\n                    <div key={file.id} className=\"file-row\">\n                      <span\n                        className=\"file-col name cursor-pointer hover:underline flex items-center gap-2\"\n                        onClick={() =>\n                            window.open(`${api.defaults.baseURL}/files/${file.id}/preview`, \"_blank\")\n                          }\n                        >\n                        {/* Icon + filename */}\n                        {file.name.endsWith(\".pdf\") ? (\n                          <PictureAsPdfIcon style={{ color: \"red\" }} />\n                        ) : file.name.endsWith(\".docx\") || file.name.endsWith(\".doc\") ? (\n                          <DescriptionIcon style={{ color: \"blue\" }} />\n                        ) : file.name.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                          <ImageIcon style={{ color: \"green\" }} />\n                        ) : (\n                          <InsertDriveFileIcon style={{ color: \"gray\" }} />\n                        )}\n                        \n                        {file.name}\n                      </span>\n\n                      <span className=\"file-col created\">\n                        {new Date(file.created_at || Date.now()).toLocaleDateString()}\n                      </span>\n\n                      <span className=\"file-col actions\">\n                        <FileMenu file={file} deleteFile={deleteFile} />\n                      </span>\n                    </div>\n                  ))}\n\n                </div>\n                ) : (\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    {currentFolder.files?.map((file) => (\n                      <div key={file.id} className=\"file-card\">\n                        <div className=\"file-thumbnail\">📄</div>\n                        <span className=\"file-name\">{file.name}</span>\n                        <FileMenu file={file} deleteFile={deleteFile} />\n                      </div>\n                    ))}\n                  </div>\n                )\n              ) : (\n                <p className=\"text-gray-500 italic\">No files uploaded yet</p>\n              )}\n              </div>\n            </>\n          ) : (\n            \n            <p>Select a folder from the sidebar</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// App wrapper\nexport default function App() {\n  const [authState, setAuthState] = useState<\n    \"login\" | \"register\" | \"app\"\n  >(\"login\");\n\n  if (authState === \"login\") {\n    return (\n      <Login\n        onLogin={() => setAuthState(\"app\")}\n        switchToRegister={() => setAuthState(\"register\")}\n      />\n    );\n  }\n\n  if (authState === \"register\") {\n    return (\n      <Register switchToLogin={() => setAuthState(\"login\")} />\n    );\n  }\n\n  return (\n    <FileManager\n      onLogout={() => {\n        localStorage.removeItem(\"token\");\n        setAuthState(\"login\");\n      }}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}