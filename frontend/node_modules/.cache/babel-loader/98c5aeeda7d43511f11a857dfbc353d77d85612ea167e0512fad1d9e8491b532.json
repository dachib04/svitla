{"ast":null,"code":"import _objectSpread from\"/Users/dachiberidze/Desktop/svitla/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useRef}from\"react\";import api from\"./api/api\";import Login from\"./components/Login\";import Register from\"./components/Register\";import\"./styles/App.css\";import Topbar from\"./components/Topbar\";import FolderIcon from\"@mui/icons-material/Folder\";import FolderMenu from\"./components/FolderMenu\";import FileMenu from\"./components/FileMenu\";import InsertDriveFileIcon from\"@mui/icons-material/InsertDriveFile\";import PictureAsPdfIcon from\"@mui/icons-material/PictureAsPdf\";import DescriptionIcon from\"@mui/icons-material/Description\";import ImageIcon from\"@mui/icons-material/Image\";import ChevronRightIcon from\"@mui/icons-material/ChevronRight\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function FileManager(_ref){var _currentFolder$subfol3,_currentFolder$files2,_currentFolder$files3;let{onLogout}=_ref;const[rootFolders,setRootFolders]=useState([]);const[currentFolder,setCurrentFolder]=useState(null);const[newFolderName,setNewFolderName]=useState(\"\");const[file,setFile]=useState(null);const[newRootName,setNewRootName]=useState(\"\");const[loading,setLoading]=useState(false);const fileInputRef=useRef(null);const[viewMode,setViewMode]=useState(\"list\");const[progress,setProgress]=useState(0);// Search state\nconst[searchTerm,setSearchTerm]=useState(\"\");const[searchResults,setSearchResults]=useState([]);const buildPath=(folder,allFolders)=>{if(!folder)return\"\";const parent=allFolders.find(f=>f.id===folder.parent_id);if(parent){return buildPath(parent,allFolders)+\" / \"+folder.name;}return folder.name;};// Fetch folder\nconst[breadcrumbPath,setBreadcrumbPath]=useState([]);const[folderMap,setFolderMap]=useState({});const fetchFolder=async function(id){let resetPath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{setLoading(true);const res=await api.get(\"/folders/\".concat(id));const folder=res.data;setCurrentFolder(folder);setFolderMap(prev=>_objectSpread(_objectSpread({},prev),{},{[folder.id]:folder}));const path=[];let current=folder;while(current){path.unshift(current);current=current.parent_id?folderMap[current.parent_id]||null:null;}setBreadcrumbPath(path);setSearchResults([]);}catch(error){console.error(\"Error fetching folder:\",error);}finally{setLoading(false);}};// Fetch root folders\nconst fetchRootFolders=async()=>{try{const res=await api.get(\"/folders?parent_id=null\");setRootFolders(res.data);}catch(error){console.error(\"Error fetching root folders:\",error);}};useEffect(()=>{fetchRootFolders();},[]);// Create subfolder\nconst createSubFolder=async()=>{if(!newFolderName||!currentFolder)return;try{const res=await api.post(\"/folders\",{name:newFolderName,parent_id:currentFolder.id});setCurrentFolder(_objectSpread(_objectSpread({},currentFolder),{},{subfolders:[...(currentFolder.subfolders||[]),res.data]}));setNewFolderName(\"\");}catch(error){console.error(\"Error creating subfolder:\",error);}};// Create root folder\nconst createRootFolder=async()=>{if(!newRootName)return;try{await api.post(\"/folders\",{name:newRootName,parent_id:null});await fetchRootFolders();setNewRootName(\"\");}catch(error){console.error(\"Error creating root folder:\",error);}};// Upload file\n// Upload file with progress\nconst uploadFile=async()=>{if(!file||!currentFolder)return;try{const formData=new FormData();formData.append(\"file\",file);formData.append(\"folder_id\",currentFolder.id.toString());await api.post(\"/files\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"},onUploadProgress:progressEvent=>{const percent=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percent);}});// Refresh folder after upload\nconst res=await api.get(\"/folders/\".concat(currentFolder.id));setCurrentFolder(res.data);// Reset\nsetFile(null);setProgress(0);if(fileInputRef.current){fileInputRef.current.value=\"\";}}catch(error){console.error(\"File upload error:\",error);}};// Delete file\nconst deleteFile=async id=>{if(!currentFolder)return;try{var _currentFolder$files;await api.delete(\"/files/\".concat(id));setCurrentFolder(_objectSpread(_objectSpread({},currentFolder),{},{files:((_currentFolder$files=currentFolder.files)===null||_currentFolder$files===void 0?void 0:_currentFolder$files.filter(f=>f.id!==id))||[]}));}catch(error){console.error(\"Error deleting file:\",error);}};// Rename folder\nconst renameFolder=async function(id,newName){let isRoot=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{const res=await api.put(\"/folders/\".concat(id),{name:newName});const updatedName=res.data.name;if(isRoot){setRootFolders(prev=>prev.map(f=>f.id===id?_objectSpread(_objectSpread({},f),{},{name:updatedName}):f));}else if(currentFolder){var _currentFolder$subfol;setCurrentFolder(_objectSpread(_objectSpread({},currentFolder),{},{subfolders:(_currentFolder$subfol=currentFolder.subfolders)===null||_currentFolder$subfol===void 0?void 0:_currentFolder$subfol.map(sub=>sub.id===id?_objectSpread(_objectSpread({},sub),{},{name:updatedName}):sub)}));}}catch(err){console.error(\"Rename folder error:\",err);}};// Delete folder\nconst deleteFolder=async function(id){let isRoot=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!window.confirm(\"Are you sure you want to delete this folder and all its contents?\"))return;try{await api.delete(\"/folders/\".concat(id));if(isRoot){setRootFolders(rootFolders.filter(f=>f.id!==id));if((currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)===id)setCurrentFolder(null);}else if(currentFolder){var _currentFolder$subfol2;setCurrentFolder(_objectSpread(_objectSpread({},currentFolder),{},{subfolders:(_currentFolder$subfol2=currentFolder.subfolders)===null||_currentFolder$subfol2===void 0?void 0:_currentFolder$subfol2.filter(sub=>sub.id!==id)}));}}catch(error){console.error(\"Error deleting folder:\",error);}};// Search files\nconst searchFiles=async()=>{if(!searchTerm.trim()){setSearchResults([]);return;}try{const res=await api.get(\"/search?q=\".concat(encodeURIComponent(searchTerm)));setSearchResults(res.data);}catch(error){console.error(\"Search error:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Topbar,{searchTerm:searchTerm,setSearchTerm:setSearchTerm,onSearch:searchFiles,onLogout:onLogout,searchResults:searchResults,fetchFolder:fetchFolder}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-root\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New root folder\",value:newRootName,onChange:e=>setNewRootName(e.target.value),className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createRootFolder,className:\"primary-btn\",children:\"+ Add\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-header\",children:[/*#__PURE__*/_jsx(ChevronRightIcon,{style:{fontSize:20,color:\"#6b7280\",marginRight:\"8px\"}}),/*#__PURE__*/_jsx(\"h2\",{children:\"Folders\"})]}),rootFolders.map(f=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>fetchFolder(f.id),className:\"folder-entry \".concat((currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)===f.id?\"active\":\"\"),children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(FolderIcon,{style:{fontSize:18,color:\"#fbbf24\",marginRight:\"6px\"}}),f.name]}),/*#__PURE__*/_jsx(FolderMenu,{folder:f,isRoot:true,renameFolder:renameFolder,deleteFolder:deleteFolder})]},f.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"italic\",children:\"Loading...\"}):currentFolder?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-1 text-gray-600 text-sm mb-4\",children:breadcrumbPath.map((f,idx)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"cursor-pointer px-1 rounded \\n                        \".concat(idx===breadcrumbPath.length-1?\"font-semibold text-gray-900\":\"hover:bg-gray-100 hover:text-blue-600\"),onClick:()=>fetchFolder(f.id,true),children:f.name}),idx<breadcrumbPath.length-1&&/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"\\u203A\"})]},f.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(ChevronRightIcon,{style:{fontSize:20,color:\"#6b7280\"}}),/*#__PURE__*/_jsx(\"h2\",{className:\"font-semibold\",children:\"Subfolders\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New subfolder name\",value:newFolderName,onChange:e=>setNewFolderName(e.target.value),className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createSubFolder,className:\"primary-btn\",children:\"+ Add\"})]}),(_currentFolder$subfol3=currentFolder.subfolders)!==null&&_currentFolder$subfol3!==void 0&&_currentFolder$subfol3.length?/*#__PURE__*/_jsxs(\"div\",{className:\"file-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-row file-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-col name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col created\",children:\"Created\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col actions\"})]}),currentFolder.subfolders.map(sub=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"file-col name subfolder-name\",onClick:()=>fetchFolder(sub.id),children:[/*#__PURE__*/_jsx(FolderIcon,{style:{fontSize:20,color:\"#fbbf24\"}}),sub.name]}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col created\",children:new Date(sub.created_at||Date.now()).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col actions\",children:/*#__PURE__*/_jsx(FolderMenu,{folder:sub,renameFolder:renameFolder,deleteFolder:deleteFolder})})]},sub.id))]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 italic\",children:\"No subfolders yet\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(ChevronRightIcon,{style:{fontSize:20,color:\"#6b7280\"}}),/*#__PURE__*/_jsx(\"h2\",{className:\"font-semibold\",children:\"Files\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:e=>{var _e$target$files;return setFile(((_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0])||null);},className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:uploadFile,className:\"primary-btn\",children:\"Upload\"})]}),progress>0&&/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",marginTop:\"10px\"},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Uploading: \",progress,\"%\"]}),/*#__PURE__*/_jsx(\"progress\",{value:progress,max:\"100\",style:{width:\"100%\"}})]}),(_currentFolder$files2=currentFolder.files)!==null&&_currentFolder$files2!==void 0&&_currentFolder$files2.length?viewMode===\"list\"?/*#__PURE__*/_jsxs(\"div\",{className:\"file-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-row file-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-col name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col created\",children:\"Created\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col actions\"})]}),currentFolder.files.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"file-col name cursor-pointer hover:underline flex items-center gap-2\",onClick:()=>window.open(\"\".concat(api.defaults.baseURL,\"/files/\").concat(file.id,\"/preview\"),\"_blank\"),children:[file.name.endsWith(\".pdf\")?/*#__PURE__*/_jsx(PictureAsPdfIcon,{style:{color:\"red\"}}):file.name.endsWith(\".docx\")||file.name.endsWith(\".doc\")?/*#__PURE__*/_jsx(DescriptionIcon,{style:{color:\"blue\"}}):file.name.match(/\\.(jpg|jpeg|png|gif)$/i)?/*#__PURE__*/_jsx(ImageIcon,{style:{color:\"green\"}}):/*#__PURE__*/_jsx(InsertDriveFileIcon,{style:{color:\"gray\"}}),file.name]}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col created\",children:new Date(file.created_at||Date.now()).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{className:\"file-col actions\",children:/*#__PURE__*/_jsx(FileMenu,{file:file,deleteFile:deleteFile})})]},file.id))]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-4\",children:(_currentFolder$files3=currentFolder.files)===null||_currentFolder$files3===void 0?void 0:_currentFolder$files3.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-thumbnail\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name\",children:file.name}),/*#__PURE__*/_jsx(FileMenu,{file:file,deleteFile:deleteFile})]},file.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 italic\",children:\"No files uploaded yet\"})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a folder from the sidebar\"})})]})]});}// App wrapper\nexport default function App(){const[authState,setAuthState]=useState(\"login\");if(authState===\"login\"){return/*#__PURE__*/_jsx(Login,{onLogin:()=>setAuthState(\"app\"),switchToRegister:()=>setAuthState(\"register\")});}if(authState===\"register\"){return/*#__PURE__*/_jsx(Register,{switchToLogin:()=>setAuthState(\"login\")});}return/*#__PURE__*/_jsx(FileManager,{onLogout:()=>{localStorage.removeItem(\"token\");setAuthState(\"login\");}});}","map":{"version":3,"names":["React","useEffect","useState","useRef","api","Login","Register","Topbar","FolderIcon","FolderMenu","FileMenu","InsertDriveFileIcon","PictureAsPdfIcon","DescriptionIcon","ImageIcon","ChevronRightIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileManager","_ref","_currentFolder$subfol3","_currentFolder$files2","_currentFolder$files3","onLogout","rootFolders","setRootFolders","currentFolder","setCurrentFolder","newFolderName","setNewFolderName","file","setFile","newRootName","setNewRootName","loading","setLoading","fileInputRef","viewMode","setViewMode","progress","setProgress","searchTerm","setSearchTerm","searchResults","setSearchResults","buildPath","folder","allFolders","parent","find","f","id","parent_id","name","breadcrumbPath","setBreadcrumbPath","folderMap","setFolderMap","fetchFolder","resetPath","arguments","length","undefined","res","get","concat","data","prev","_objectSpread","path","current","unshift","error","console","fetchRootFolders","createSubFolder","post","subfolders","createRootFolder","uploadFile","formData","FormData","append","toString","headers","onUploadProgress","progressEvent","percent","Math","round","loaded","total","value","deleteFile","_currentFolder$files","delete","files","filter","renameFolder","newName","isRoot","put","updatedName","map","_currentFolder$subfol","sub","err","deleteFolder","window","confirm","_currentFolder$subfol2","searchFiles","trim","encodeURIComponent","className","children","onSearch","type","placeholder","onChange","e","target","onClick","style","fontSize","color","marginRight","idx","Date","created_at","now","toLocaleDateString","ref","_e$target$files","width","marginTop","max","open","defaults","baseURL","endsWith","match","App","authState","setAuthState","onLogin","switchToRegister","switchToLogin","localStorage","removeItem"],"sources":["/Users/dachiberidze/Desktop/svitla/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport api from \"./api/api\";\nimport { Folder, File as DbFile } from \"./types/types\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport \"./styles/App.css\";\nimport Topbar from \"./components/Topbar\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport FolderMenu from \"./components/FolderMenu\";\nimport FileMenu from \"./components/FileMenu\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";  \nimport ImageIcon from \"@mui/icons-material/Image\";     \nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\n\n\nfunction FileManager({ onLogout }: { onLogout: () => void }) {\n  const [rootFolders, setRootFolders] = useState<Folder[]>([]);\n  const [currentFolder, setCurrentFolder] = useState<Folder | null>(null);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [file, setFile] = useState<File | null>(null);\n  const [newRootName, setNewRootName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\"list\");\n\n  const [progress, setProgress] = useState(0);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<DbFile[]>([]);\n\n  const buildPath = (folder: Folder | null, allFolders: Folder[]): string => {\n    if (!folder) return \"\";\n    const parent = allFolders.find(f => f.id === folder.parent_id);\n    if (parent) {\n      return buildPath(parent, allFolders) + \" / \" + folder.name;\n    }\n    return folder.name; \n  };\n\n\n  // Fetch folder\nconst [breadcrumbPath, setBreadcrumbPath] = useState<Folder[]>([]);\nconst [folderMap, setFolderMap] = useState<Record<number, Folder>>({});\n\n\n\nconst fetchFolder = async (id: number, resetPath = false) => {\n  try {\n    setLoading(true);\n    const res = await api.get(`/folders/${id}`);\n    const folder: Folder = res.data;\n\n    setCurrentFolder(folder);\n    \n    setFolderMap((prev) => ({ ...prev, [folder.id]: folder }));\n\n    const path: Folder[] = [];\n    let current: Folder | null = folder;\n\n    while (current) {\n      path.unshift(current);\n      current = current.parent_id ? folderMap[current.parent_id] || null : null;\n    }\n\n    setBreadcrumbPath(path);\n    setSearchResults([]);\n  } catch (error) {\n    console.error(\"Error fetching folder:\", error);\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n  // Fetch root folders\n  const fetchRootFolders = async () => {\n    try {\n      const res = await api.get(\"/folders?parent_id=null\");\n      setRootFolders(res.data);\n    } catch (error) {\n      console.error(\"Error fetching root folders:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchRootFolders();\n  }, []);\n\n  // Create subfolder\n  const createSubFolder = async () => {\n    if (!newFolderName || !currentFolder) return;\n    try {\n      const res = await api.post(\"/folders\", {\n        name: newFolderName,\n        parent_id: currentFolder.id,\n      });\n      setCurrentFolder({\n        ...currentFolder,\n        subfolders: [...(currentFolder.subfolders || []), res.data],\n      });\n      setNewFolderName(\"\");\n    } catch (error) {\n      console.error(\"Error creating subfolder:\", error);\n    }\n  };\n\n  // Create root folder\n  const createRootFolder = async () => {\n    if (!newRootName) return;\n    try {\n      await api.post(\"/folders\", { name: newRootName, parent_id: null });\n      await fetchRootFolders();\n      setNewRootName(\"\");\n    } catch (error) {\n      console.error(\"Error creating root folder:\", error);\n    }\n  };\n\n  // Upload file\n\n\n  // Upload file with progress\nconst uploadFile = async () => {\n  if (!file || !currentFolder) return;\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"folder_id\", currentFolder.id.toString());\n\n    await api.post(\"/files\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n      onUploadProgress: (progressEvent: any) => {\n        const percent = Math.round(\n          (progressEvent.loaded * 100) / progressEvent.total\n        );\n        setProgress(percent);\n      },\n    });\n\n    // Refresh folder after upload\n    const res = await api.get(`/folders/${currentFolder.id}`);\n    setCurrentFolder(res.data);\n\n    // Reset\n    setFile(null);\n    setProgress(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  } catch (error) {\n    console.error(\"File upload error:\", error);\n  }\n};\n\n  // Delete file\n  const deleteFile = async (id: number) => {\n    if (!currentFolder) return;\n    try {\n      await api.delete(`/files/${id}`);\n      setCurrentFolder({\n        ...currentFolder,\n        files: currentFolder.files?.filter((f) => f.id !== id) || [],\n      });\n    } catch (error) {\n      console.error(\"Error deleting file:\", error);\n    }\n  };\n\n  // Rename folder\n  const renameFolder = async (\n    id: number,\n    newName: string,\n    isRoot: boolean = false\n  ) => {\n    try {\n      const res = await api.put(`/folders/${id}`, { name: newName });\n      const updatedName = res.data.name;\n\n      if (isRoot) {\n        setRootFolders((prev) =>\n          prev.map((f) => (f.id === id ? { ...f, name: updatedName } : f))\n        );\n      } else if (currentFolder) {\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: currentFolder.subfolders?.map((sub) =>\n            sub.id === id ? { ...sub, name: updatedName } : sub\n          ),\n        });\n      }\n    } catch (err) {\n      console.error(\"Rename folder error:\", err);\n    }\n  };\n\n  // Delete folder\n  const deleteFolder = async (id: number, isRoot: boolean = false) => {\n    if (\n      !window.confirm(\n        \"Are you sure you want to delete this folder and all its contents?\"\n      )\n    )\n      return;\n    try {\n      await api.delete(`/folders/${id}`);\n      if (isRoot) {\n        setRootFolders(rootFolders.filter((f) => f.id !== id));\n        if (currentFolder?.id === id) setCurrentFolder(null);\n      } else if (currentFolder) {\n        setCurrentFolder({\n          ...currentFolder,\n          subfolders: currentFolder.subfolders?.filter(\n            (sub) => sub.id !== id\n          ),\n        });\n      }\n    } catch (error) {\n      console.error(\"Error deleting folder:\", error);\n    }\n  };\n\n  // Search files\n  const searchFiles = async () => {\n    if (!searchTerm.trim()) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const res = await api.get(`/search?q=${encodeURIComponent(searchTerm)}`);\n      setSearchResults(res.data);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    }\n  };\n\n\n\n  return (\n    <div className=\"app-container\">\n      {/* Topbar */}\n      <Topbar\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        onSearch={searchFiles}\n        onLogout={onLogout}\n        searchResults={searchResults}  \n        fetchFolder={fetchFolder}\n      />\n\n      {/* Content area (sidebar + main) */}\n      <div className=\"content\">\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n\n            <div className=\"add-root\">\n            <input\n              type=\"text\"\n              placeholder=\"New root folder\"\n              value={newRootName}\n              onChange={(e) => setNewRootName(e.target.value)}\n              className=\"text-input\"\n            />\n            <button onClick={createRootFolder} className=\"primary-btn\">\n              + Add\n            </button>\n          </div>\n\n          <div className=\"sidebar-header\">\n            <ChevronRightIcon style={{ fontSize: 20, color: \"#6b7280\", marginRight: \"8px\" }} />\n\n            <h2>Folders</h2>\n          </div>\n\n          {rootFolders.map((f) => (\n            <div\n              key={f.id}\n              onClick={() => fetchFolder(f.id)}\n              className={`folder-entry ${\n                currentFolder?.id === f.id ? \"active\" : \"\"\n              }`}\n            >\n              <span>\n                <FolderIcon style={{ fontSize: 18, color: \"#fbbf24\", marginRight: \"6px\" }} />\n                {f.name}\n              </span>\n              <FolderMenu\n                folder={f}\n                isRoot={true}\n                renameFolder={renameFolder}\n                deleteFolder={deleteFolder}\n              />\n            </div>\n          ))}\n        </div>\n\n        {/* Main Area */}\n        <div className=\"main\">\n          {loading ? (\n            <p className=\"italic\">Loading...</p>\n          ) : currentFolder ? (\n            <>\n              <div className=\"flex items-center gap-1 text-gray-600 text-sm mb-4\">\n                {breadcrumbPath.map((f, idx) => (\n                  <React.Fragment key={f.id}>\n                    <span\n                      className={`cursor-pointer px-1 rounded \n                        ${idx === breadcrumbPath.length - 1 \n                          ? \"font-semibold text-gray-900\" \n                          : \"hover:bg-gray-100 hover:text-blue-600\"}`} \n                      onClick={() => fetchFolder(f.id, true)}\n                    >\n                      {f.name}\n                    </span>\n                    {idx < breadcrumbPath.length - 1 && (\n                      <span className=\"text-gray-400\">›</span> \n                    )}\n                  </React.Fragment>\n                ))}\n              </div>\n\n\n\n\n             {/* Subfolders */}\n              <div className=\"mt-6\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <ChevronRightIcon\n                    style={{ fontSize: 20, color: \"#6b7280\" }}\n                  />\n                  <h2 className=\"font-semibold\">Subfolders</h2>\n                </div>\n\n                {/* Add subfolder input */}\n                <div className=\"flex items-center gap-2 mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New subfolder name\"\n                    value={newFolderName}\n                    onChange={(e) => setNewFolderName(e.target.value)}\n                    className=\"text-input\"\n                  />\n                  <button onClick={createSubFolder} className=\"primary-btn\">\n                    + Add\n                  </button>\n                </div>\n\n                {currentFolder.subfolders?.length ? (\n                  <div className=\"file-table\">\n                    {/* Table Header */}\n                    <div className=\"file-row file-header\">\n                      <span className=\"file-col name\">Name</span>\n                      <span className=\"file-col created\">Created</span>\n                      <span className=\"file-col actions\"></span>\n                    </div>\n\n                    {/* Table Rows */}\n                    {currentFolder.subfolders.map((sub) => (\n                      <div key={sub.id} className=\"file-row\">\n                        <span\n                          className=\"file-col name subfolder-name\"\n                          onClick={() => fetchFolder(sub.id)}\n                        >\n                          <FolderIcon style={{ fontSize: 20, color: \"#fbbf24\" }} />\n                          {sub.name}\n                        </span>\n\n                        <span className=\"file-col created\">\n                          {new Date(sub.created_at || Date.now()).toLocaleDateString()}\n                        </span>\n\n                        <span className=\"file-col actions\">\n                          <FolderMenu\n                            folder={sub}\n                            renameFolder={renameFolder}\n                            deleteFolder={deleteFolder}\n                          />\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 italic\">No subfolders yet</p>\n                )}\n              </div>\n\n              {/* Files */}\n              <div className=\"mt-6\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <ChevronRightIcon\n                    style={{ fontSize: 20, color: \"#6b7280\" }}\n                  />\n                  <h2 className=\"font-semibold\">Files</h2>\n                </div>\n                <div className=\"flex items-center gap-2 mb-4\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={(e) =>\n                      setFile(e.target.files?.[0] || null)\n                    }\n                    className=\"text-input\"\n                  />\n                  <button onClick={uploadFile} className=\"primary-btn\">\n                    Upload\n                  </button>\n                </div>\n                {progress > 0 && (\n                  <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n                    <p>Uploading: {progress}%</p>\n                    <progress value={progress} max=\"100\" style={{ width: \"100%\" }}></progress>\n                  </div>\n                )}\n\n\n              {currentFolder.files?.length ? (\n                viewMode === \"list\" ? (\n                <div className=\"file-table\">\n                  {/* Header */}\n                  <div className=\"file-row file-header\">\n                    <span className=\"file-col name\">Name</span>\n                    <span className=\"file-col created\">Created</span>\n                    <span className=\"file-col actions\"></span>\n                  </div>\n\n                   {/* Files */}\n                  {currentFolder.files.map((file) => (\n                    <div key={file.id} className=\"file-row\">\n                      <span\n                        className=\"file-col name cursor-pointer hover:underline flex items-center gap-2\"\n                        onClick={() =>\n                            window.open(`${api.defaults.baseURL}/files/${file.id}/preview`, \"_blank\")\n                          }\n                        >\n                        {/* Icon + filename */}\n                        {file.name.endsWith(\".pdf\") ? (\n                          <PictureAsPdfIcon style={{ color: \"red\" }} />\n                        ) : file.name.endsWith(\".docx\") || file.name.endsWith(\".doc\") ? (\n                          <DescriptionIcon style={{ color: \"blue\" }} />\n                        ) : file.name.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                          <ImageIcon style={{ color: \"green\" }} />\n                        ) : (\n                          <InsertDriveFileIcon style={{ color: \"gray\" }} />\n                        )}\n                        \n                        {file.name}\n                      </span>\n\n                      <span className=\"file-col created\">\n                        {new Date(file.created_at || Date.now()).toLocaleDateString()}\n                      </span>\n\n                      <span className=\"file-col actions\">\n                        <FileMenu file={file} deleteFile={deleteFile} />\n                      </span>\n                    </div>\n                  ))}\n\n                </div>\n                ) : (\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    {currentFolder.files?.map((file) => (\n                      <div key={file.id} className=\"file-card\">\n                        <div className=\"file-thumbnail\">📄</div>\n                        <span className=\"file-name\">{file.name}</span>\n                        <FileMenu file={file} deleteFile={deleteFile} />\n                      </div>\n                    ))}\n                  </div>\n                )\n              ) : (\n                <p className=\"text-gray-500 italic\">No files uploaded yet</p>\n              )}\n              </div>\n            </>\n          ) : (\n            \n            <p>Select a folder from the sidebar</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// App wrapper\nexport default function App() {\n  const [authState, setAuthState] = useState<\n    \"login\" | \"register\" | \"app\"\n  >(\"login\");\n\n  if (authState === \"login\") {\n    return (\n      <Login\n        onLogin={() => setAuthState(\"app\")}\n        switchToRegister={() => setAuthState(\"register\")}\n      />\n    );\n  }\n\n  if (authState === \"register\") {\n    return (\n      <Register switchToLogin={() => setAuthState(\"login\")} />\n    );\n  }\n\n  return (\n    <FileManager\n      onLogout={() => {\n        localStorage.removeItem(\"token\");\n        setAuthState(\"login\");\n      }}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}